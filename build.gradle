plugins {
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.9.25"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.9.25"
    id "org.jetbrains.kotlin.plugin.spring" version "1.9.25"
    id "org.springframework.boot" version "3.3.8"
    id "io.spring.dependency-management" version "1.1.7"
    id "com.gorylenko.gradle-git-properties" version "2.4.2"
}

ext {
    openApiVersion = "2.8.5"
    postgresContainerVersion = "1.20.4"
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    mavenCentral()
}

[compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = "17"

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.postgresql:postgresql"

    implementation "io.micrometer:micrometer-registry-prometheus"
    implementation "org.springdoc:springdoc-openapi-starter-common:$openApiVersion"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$openApiVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

    testImplementation "org.apache.commons:commons-lang3"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.testcontainers:postgresql:$postgresContainerVersion"
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "${project.name}.jar"
}

jar {
    enabled = false
}
